{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "VsDevWorkstationStorageType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Premium_LRS"
      ]
    },
    "VsDevWorkstationName": {
      "type": "string",
      "minLength": 1
    },
    "AdminUserName": {
      "type": "string",
      "minLength": 1
    },
    "AdminUserPassword": {
      "type": "securestring"
    },
    "VsDevWorkstationWindowsOSVersion": {
      "type": "string",
      "defaultValue": "VS-2017-Ent-Latest-WS2016",
      "allowedValues": [
        "VS-2017-Ent-Latest-WS2016",
        "VS-2017-Comm-Latest-WS2016"
      ]
    },
    "virtualNetworkName": {
      "type": "string"
    },
    "virtualNetworkResourceGroup": {
      "type": "string"
    },
    "repoUri": {
      "type": "string"
    },
    "webSrvUri": {
      "type": "string"
    },
    "dbSrvUri": {
      "type": "string"
    },
    "dbName": {
      "type": "string"
    },
    "dbUserName": {
      "type": "string"
    },
    "dbUserPassword": {
      "type": "string"
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "Auto-generated container in staging storage account to receive post-build staging folder upload"
      }
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "Auto-generated token to access _artifactsLocation"
      }
    }
  },
  "variables": {
    "VsDevWorkstationImagePublisher": "MicrosoftVisualStudio",
    "VsDevWorkstationImageOffer": "VisualStudio",
    "VsDevWorkstationOSDiskName": "VsDevWorkstationOSDisk",
    "VsDevWorkstationVmSize": "Standard_D2_v2",
    "VsDevWorkstationVnetID": "[resourceId(parameters('virtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
    "VsDevWorkstationSubnetRef": "[concat(variables('VsDevWorkstationVnetID'), '/subnets/', 'Subnet-1')]",
    "VsDevWorkstationNicName": "[concat(parameters('VsDevWorkstationName'), 'NetworkInterface')]",
    "VsDevWorkstationPubIPName": "[concat(parameters('vsDevWorkstationName'),'PubIP')]",
    "VsDevWorkstationPubIPDnsName": "[tolower(concat(parameters('VsDevWorkstationName'),uniqueString(resourceGroup().id)))]",
    "vsDevWorkstationConfigScriptFolder": "CustomScripts",
    "vsDevWorkstationConfigScriptFileName": "vsDevWorkstationConfig.ps1",
    "powerShellExecuteCommandParams": "[concat(' -repoUri ',parameters('repoUri'), ' -adminUserName ', parameters('adminUserName'), ' -adminUserPassword ', parameters('adminUserPassword'), ' -webSrvUri ', parameters('webSrvUri'), ' -dbSrvUri ', parameters('dbSrvUri'), ' -dbName ', parameters('dbName'), ' -dbUserName ', parameters('dbUserName'), ' -dbUserPassword ', parameters('dbUserPassword'))]",
    "powerShellExecuteCommandForBlobStorage": "[concat('powershell -ExecutionPolicy Unrestricted -File ', variables('vsDevWorkstationConfigScriptFolder'), '/', variables('vsDevWorkstationConfigScriptFileName'), ' ', variables('powerShellExecuteCommandParams'))]",
    "powerShellExecuteCommandForURI": "[concat('powershell -ExecutionPolicy Unrestricted -File ', variables('vsDevWorkstationConfigScriptFileName'), ' ', variables('powerShellExecuteCommandParams'))]",
    "powerShellExecuteCommand": "[if(contains(parameters('_artifactsLocation'),'.blob.core.windows.net'),variables('powerShellExecuteCommandForBlobStorage'),variables('powerShellExecuteCommandForURI'))]"
  },
  "resources": [
    {
      "name": "[variables('VsDevWorkstationNicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('VsDevWorkstationPubIPName'))]" ],
      "tags": {
        "displayName": "VsDevWorkstationNic"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('VsDevWorkstationSubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('VsDevWorkstationPubIPName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('VsDevWorkstationName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-04-30-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('VsDevWorkstationNicName'))]"
      ],
      "tags": {
        "displayName": "VsDevWorkstation"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('VsDevWorkstationVmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('VsDevWorkstationName')]",
          "adminUsername": "[parameters('AdminUserName')]",
          "adminPassword": "[parameters('AdminUserPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('VsDevWorkstationImagePublisher')]",
            "offer": "[variables('VsDevWorkstationImageOffer')]",
            "sku": "[parameters('VsDevWorkstationWindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "VsDevWorkstationOSDisk",
            "managedDisk": {
              "storageAccountType": "[parameters('VsDevWorkstationStorageType')]"
            },
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('VsDevWorkstationNicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "name": "vsDevWorkstationConfig",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2016-03-30",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', parameters('VsDevWorkstationName'))]"
          ],
          "tags": {
            "displayName": "vsDevWorkstationConfig"
          },
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.4",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "[concat(parameters('_artifactsLocation'), '/', variables('vsDevWorkstationConfigScriptFolder'), '/', variables('vsDevWorkstationConfigScriptFileName'), parameters('_artifactsLocationSasToken'))]"
              ],
              "commandToExecute": "[variables('powerShellExecuteCommand')]"
            }
          }
        }
      ]
    },
    {
      "name": "[variables('VsDevWorkstationPubIPName')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [ ],
      "tags": {
        "displayName": "VsDevWorkstationPubIP"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('VsDevWorkstationPubIPDnsName')]"
        }
      }
    }
  ],
  "outputs": {

  }
}
